<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>net.tenie</groupId>
	<artifactId>SQLucky</artifactId>
	<version>1.0</version>
	<packaging>jar</packaging>

	<name>sqlucky</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.release>16</maven.compiler.release>
		<javafx.version>16</javafx.version>

		<jfoenix.version>9.0.10</jfoenix.version> 
		<richtextfx.version>0.10.6</richtextfx.version>
		<controlsfx.version>11.1.0</controlsfx.version>
		<sql.formatter.version>2.0.0</sql.formatter.version>
		<commons.io.version>2.8.0</commons.io.version>
	    <slf4j.api.version>1.7.30</slf4j.api.version>
		<log4j.version>2.14.1</log4j.version>
		
		<sqlite.jdbc.version>3.34.0</sqlite.jdbc.version>
		<h2.jdbc.version>1.4.197</h2.jdbc.version>
		<db2jcc4.version>10.1</db2jcc4.version> 
		<mysql.jdbc.version>5.1.35</mysql.jdbc.version>

		
		<jvm.modules>com.jfoenix,org.controlsfx.controls,org.apache.logging.log4j,java.desktop,java.naming,java.security.jgss,java.transaction.xa,java.compiler,java.logging,java.management,java.rmi,java.scripting,java.xml,java.sql,javafx.base,javafx.graphics,javafx.swing,javafx.controls,javafx.fxml</jvm.modules>
		<javafx.version>16</javafx.version>
		<app.name>SQLucky</app.name>
		<app.version>1.0</app.version>
		<app.vendor>Tenie.net</app.vendor>
		<project.description>SQLucky</project.description>
		<non.modules.path>${project.build.directory}/non-mods</non.modules.path>
	</properties>

	<organization>
		<name>https://github.com/tenie/SQLucky</name>
	</organization>

	<dependencies>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-controls</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-fxml</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-graphics</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.openjfx</groupId>
		    <artifactId>javafx-swing</artifactId>
		    <version>${javafx.version}</version>
		</dependency>

		<!-- 控件库 -->
			<dependency>
			<groupId>com.jfoenix</groupId>
			<artifactId>jfoenix</artifactId>
			<version>${jfoenix.version}</version>
		</dependency>

		<dependency>
			<groupId>org.fxmisc.richtext</groupId>
			<artifactId>richtextfx</artifactId>
			<version>${richtextfx.version}</version>
		</dependency>
		<dependency>
			<groupId>org.controlsfx</groupId>
			<artifactId>controlsfx</artifactId>
			<version>${controlsfx.version}</version>
		</dependency>

		<!-- sql 格式化 -->
		<dependency>
			<groupId>com.github.vertical-blank</groupId>
			<artifactId>sql-formatter</artifactId>
			<version>${sql.formatter.version}</version>
		</dependency>

		<!-- io 操作文件 -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons.io.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.api.version}</version>
		</dependency>

		<!-- 数据库 JDBC -->
		<dependency>
			<groupId>com.ibm.db2.jcc</groupId>
			<artifactId>db2jcc4</artifactId>
			<version>${db2jcc4.version}</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.jdbc.version}</version>
		</dependency>
		
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>${h2.jdbc.version}</version>
		</dependency> 
		
		
		<dependency>
			<groupId>org.xerial</groupId>
			<artifactId>sqlite-jdbc</artifactId>
			<version>${sqlite.jdbc.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>${log4j.version}</version>
		</dependency>
	</dependencies>

	<build>
	
	  <resources>
        <resource>
            <directory>src/main/resources</directory>
            <includes>
                <include>**/*.properties</include>
                <include>**/*.xml</include>
                <include>**/*.fxml</include>
                <include>**/*.css</include>
                <include>**/*.icns</include>
                <include>**/*.png</include>
                <include>**/*.ico</include>
                <include>**/*.jpg</include>
            </includes> 
            <filtering>false</filtering>
        </resource> 
        
         <resource> <!-- 配置文件 -->
                <directory>${project.basedir}/config</directory>
                <filtering>true</filtering>
                <targetPath>${project.build.directory}/packaging</targetPath>
         </resource>
    </resources>
    
		<plugins> 
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                           <!--  <excludeGroupIds>org.openjfx</excludeGroupIds> -->
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<release>${maven.compiler.release}</release>

					<compilerArgs>
						<arg>--add-exports</arg>
						<arg>javafx.graphics/com.sun.javafx.application=SQLucky</arg>
						<arg>--add-exports</arg>
						<arg>org.controlsfx.controls/impl.org.controlsfx.tableview2.filter.parser=SQLucky</arg>
						<arg>--add-exports</arg>
						<arg>org.controlsfx.controls/impl.org.controlsfx.tableview2.filter.parser.aggregate=SQLucky</arg>
						<arg>--add-exports</arg>
						<arg>org.controlsfx.controls/impl.org.controlsfx.i18n=SQLucky</arg>
					</compilerArgs>

				</configuration>
			</plugin>
			<plugin>
				<groupId>org.openjfx</groupId>
				<artifactId>javafx-maven-plugin</artifactId>
				<version>0.0.5</version>
				<configuration>
					<release>${maven.compiler.release}</release>
					<jlinkImageName>SQLucky</jlinkImageName>
					<launcher>launcher</launcher>
					<mainClass>SQLucky/net.tenie.fx.main.MainMyDB</mainClass>
					<options>
						<option>--add-modules=javafx.controls,javafx.fxml</option>
						<option>--add-opens</option>
						<option>javafx.graphics/javafx.scene.text=ALL-UNNAMED</option>
						<option>--add-exports</option>
						<option>javafx.graphics/com.sun.javafx.text=ALL-UNNAMED</option>
						<option>--add-opens</option>
						<option>javafx.graphics/com.sun.javafx.text=ALL-UNNAMED</option>
						<option>--add-exports</option>
						<option>javafx.graphics/com.sun.javafx.scene.text=ALL-UNNAMED</option>
						<option>--add-exports</option>
						<option>javafx.graphics/com.sun.javafx.scene=ALL-UNNAMED</option>
						<option>--add-exports</option>
						<option>javafx.graphics/com.sun.javafx.geom=ALL-UNNAMED</option>
						<option>--add-exports</option>
						<option>javafx.graphics/com.sun.javafx.application=ALL-UNNAMED</option>
						<option>--add-exports</option>
						<option>javafx.graphics/com.sun.javafx.application=SQLucky</option>
						<option>--add-opens</option>
						<option>java.base/java.lang=com.jfoenix</option>
						<option>--add-opens</option>
						<option>java.base/java.lang.reflect=com.jfoenix</option>
						<option>--add-opens</option>
						<option>java.base/java.lang=ALL-UNNAMED</option>
						<option>--add-opens</option>
						<option>javafx.controls/javafx.scene.control=SQLucky</option>
					</options>
				</configuration>
			</plugin>
			
			<!-- 安装依赖 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<executions>
					<execution>
						<id>db2</id>
						<phase>clean</phase>
						<goals>
							<goal>install-file</goal>
						</goals>
						<configuration>
							<groupId>com.ibm.db2.jcc</groupId>
							<artifactId>db2jcc4</artifactId>
							<version>10.1</version>
							<packaging>jar</packaging>
							<file>${basedir}/lib/db2jcc4-10.1.jar</file>
							<createChecksum>true</createChecksum>
							<generatePom>true</generatePom>
						</configuration>
					</execution>
					<execution>
						<id>mysql</id>
						<phase>clean</phase>
						<goals>
							<goal>install-file</goal>
						</goals>
						<configuration>
							<groupId>mysql</groupId>
							<artifactId>mysql-connector-java</artifactId>
							<version>5.1.35</version>
							<packaging>jar</packaging>
							<file>${basedir}/lib/mysql-connector-java-5.1.35.jar</file>
							<createChecksum>true</createChecksum>
							<generatePom>true</generatePom>
						</configuration>
			
					</execution>
				</executions>
			</plugin>
			
			<!-- 将自己的包放入到依赖目录 -->
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>copy</id>
						<phase>package</phase>
						<configuration>
							<tasks>
								<copy todir="${project.build.directory}/non-mods">
									<fileset dir="${project.build.directory}">
										<include name="${project.artifactId}-${project.version}.jar" />
									</fileset>
								</copy>
								
								<copy todir="${project.build.directory}/mods">
									<fileset dir="${project.build.directory}/dependency">
										<include name="jfoenix*.jar" />
										<include name="log4j-api*.jar" />
										<include name="controlsfx*.jar" />
										<include name="javafx-*.jar" /> 
									</fileset>
								</copy>
								<copy todir="${project.build.directory}/non-mods">
									<fileset dir="${project.build.directory}/dependency">
										<include name="commons*.jar" />
										<include name="db2jcc*.jar" />
										<include name="flowless*.jar" />
										<include name="h2*.jar" />   
										<include name="log4j-core*.jar" />
										<include name="log4j-slf4j-impl*.jar" />
										<include name="mysql*.jar" />
										<include name="reactfx*.jar" /> 
										
										<include name="richtextfx*.jar" />
										<include name="slf4j-api*.jar" />
										<include name="sql-formatter*.jar" />
										<include name="sqlite-jdbc*.jar" /> 
										
										<include name="undofx*.jar" />
										<include name="wellbehavedfx-*.jar" />
										
									</fileset>
								</copy>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<!-- https://github.com/wiverson/jtoolprovider-plugin -->
				<groupId>io.github.wiverson</groupId>
				<artifactId>jtoolprovider-plugin</artifactId>
				<version>1.0.34</version>
				<executions>
					<!-- 先生成一个jvm 镜像 -->
					<execution>
						<id>jlink</id>
						<phase>package</phase>
						<goals>
							<goal>java-tool</goal>
						</goals>
						<configuration>
							<toolName>jlink</toolName>
							<removeDirectories>${project.build.directory}/jvm-image/</removeDirectories>
							<modulePath>${local.modules.path}</modulePath>
							<addModules>${jvm.modules}</addModules>
							<output>${project.build.directory}/jvm-image</output>
							<args>
								<arg>--strip-native-commands</arg>
								<arg>--no-header-files</arg>
								<arg>--strip-debug</arg>
								<arg>--no-man-pages</arg>
								<arg>--compress=2</arg>
							</args>
						</configuration>
					</execution>
					
					<execution>
						<!-- 根据jlink的镜像 生成native 包 -->
						<id>jpackage</id>
						<phase>install</phase>
						<goals>
							<goal>java-tool</goal>
						</goals>
						<configuration>
							<toolName>jpackage</toolName> <!-- jpackage 的参数(在下面文件里) -->
							<removeDirectories>${project.build.directory}/sqlucky</removeDirectories>
							<args>@${project.build.directory}/packaging/${platform}-jpackage.txt</args>
						</configuration>
					</execution>
					 
				</executions>
			</plugin>
			
		</plugins>
	</build>
	<profiles> 
        <profile>
            <id>unix-active</id>
            <activation>
                <os>
                    <family>unix</family>
                </os>
            </activation>
            <properties>
                <platform>linux</platform>
                <local.modules.path>${env.JAVA_HOME}/jmods:${project.build.directory}/dependency</local.modules.path>
            </properties>
        </profile>
        <profile>
            <id>windows-active</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <properties>
                <platform>win</platform>
                <local.modules.path>D:/Program Files/Java/jdk-16/jmods;${project.build.directory}/mods</local.modules.path>
            </properties> 
        </profile>
        <profile>
            <id>mac-active</id>
            <activation>
                <os>
                    <family>mac</family>
                </os>
            </activation>
            <properties>
                <platform>mac</platform> 
                <local.modules.path>${env.JAVA_HOME}/jmods:${project.build.directory}/dependency</local.modules.path>
            </properties>
        </profile>
    </profiles>
</project>
